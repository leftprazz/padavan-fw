'\" t
.\"     Title: namei
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.20
.\"      Date: 2023-11-21
.\"    Manual: User Commands
.\"    Source: util-linux 2.39.3
.\"  Language: English
.\"
.TH "NAMEI" "1" "2023-11-21" "util\-linux 2.39.3" "User Commands"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
namei \- follow a pathname until a terminal point is found
.SH "SYNOPSIS"
.sp
\fBnamei\fP [options] \fIpathname\fP...
.SH "DESCRIPTION"
.sp
\fBnamei\fP interprets its arguments as pathnames to any type of Unix file (symlinks, files, directories, and so forth). \fBnamei\fP then follows each pathname until an endpoint is found (a file, a directory, a device node, etc). If it finds a symbolic link, it shows the link, and starts following it, indenting the output to show the context.
.sp
This program is useful for finding "too many levels of symbolic links" problems.
.sp
For each line of output, \fBnamei\fP uses the following characters to identify the file type found:
.sp
.if n .RS 4
.nf
.fam C
   f: = the pathname currently being resolved
    d = directory
    l = symbolic link (both the link and its contents are output)
    s = socket
    b = block device
    c = character device
    p = FIFO (named pipe)
    \- = regular file
    ? = an error of some kind
.fam
.fi
.if n .RE
.sp
\fBnamei\fP prints an informative message when the maximum number of symbolic links this system can have has been exceeded.
.SH "OPTIONS"
.sp
\fB\-l\fP, \fB\-\-long\fP
.RS 4
Use the long listing format (same as \fB\-m \-o \-v\fP).
.RE
.sp
\fB\-m\fP, \fB\-\-modes\fP
.RS 4
Show the mode bits of each file type in the style of \fBls\fP(1), for example \*(Aqrwxr\-xr\-x\*(Aq.
.RE
.sp
\fB\-n\fP, \fB\-\-nosymlinks\fP
.RS 4
Don\(cqt follow symlinks.
.RE
.sp
\fB\-o\fP, \fB\-\-owners\fP
.RS 4
Show owner and group name of each file.
.RE
.sp
\fB\-v\fP, \fB\-\-vertical\fP
.RS 4
Vertically align the modes and owners.
.RE
.sp
\fB\-x\fP, \fB\-\-mountpoints\fP
.RS 4
Show mountpoint directories with a \*(AqD\*(Aq rather than a \*(Aqd\*(Aq.
.RE
.sp
\fB\-Z\fP, \fB\-\-context\fP
.RS 4
Show security context of the file or "?" if not available.
The support for security contexts is optional and does not have to be compiled to the \fBnamei\fP binary.
.RE
.sp
\fB\-h\fP, \fB\-\-help\fP
.RS 4
Display help text and exit.
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.RS 4
Print version and exit.
.RE
.SH "BUGS"
.sp
To be discovered.
.SH "AUTHORS"
.sp
The original \fBnamei\fP program was written by \c
.MTO "rogers\(atamadeus.wr.tek.com" "Roger Southwick" "."
.sp
The program was rewritten by Karel Zak \c
.MTO "kzak\(atredhat.com" "Karel Zak" "."
.SH "SEE ALSO"
.sp
\fBls\fP(1),
\fBstat\fP(1),
\fBsymlink\fP(7)
.SH "REPORTING BUGS"
.sp
For bug reports, use the issue tracker at \c
.URL "https://github.com/util\-linux/util\-linux/issues" "" "."
.SH "AVAILABILITY"
.sp
The \fBnamei\fP command is part of the util\-linux package which can be downloaded from \c
.URL "https://www.kernel.org/pub/linux/utils/util\-linux/" "Linux Kernel Archive" "."