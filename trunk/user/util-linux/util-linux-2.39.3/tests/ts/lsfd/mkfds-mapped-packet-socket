#!/bin/bash
#
# Copyright (C) 2022 Masatake YAMATO <yamato@redhat.com>
#
# This file is part of util-linux.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
TS_TOPDIR="${0%/*}/../.."
TS_DESC="mmap'ed AF_PACKET socket"

. "$TS_TOPDIR"/functions.sh
ts_init "$*"
ts_skip_nonroot
ts_skip_docker

. "$TS_SELF"/lsfd-functions.bash

ts_check_test_command "$TS_CMD_LSFD"

ts_check_test_command "$TS_HELPER_MKFDS"

ts_cd "$TS_OUTDIR"

PID=
FD=3
EXPR=
INTERFACE=lo
SOCKTYPE=
ERR=

for SOCKTYPE in RAW DGRAM; do
    coproc MKFDS { "$TS_HELPER_MKFDS" mapped-packet-socket $FD \
				      interface=${INTERFACE} socktype=${SOCKTYPE}; }
    if read -u ${MKFDS[0]} PID; then
	EXPR='(ASSOC == "shm") and (STTYPE == "SOCK") and (MODE == "-w-")'
	${TS_CMD_LSFD} -p "$PID" -n -o SOCK.PROTONAME -Q "${EXPR}"
	echo 'SOCK.PROTONAME': $?

	EXPR="(FD == $FD)"
	${TS_CMD_LSFD} -p "$PID" -n -o NAME,SOCK.TYPE,SOCK.PROTONAME,PACKET.IFACE,PACKET.PROTOCOL -Q "${EXPR}"
	echo 'NAME,SOCK.TYPE,SOCK.PROTONAME,PACKET.IFACE,PACKET.PROTOCOL': $?

	kill -CONT ${PID}
    fi
    wait ${MKFDS_PID}
    ERR=$?
    if [ $ERR != 0 ]; then
	   break
    fi
done > $TS_OUTPUT 2>&1

if [[ "$ERR" == "$ENOPROTOOPT" ]]; then
    ts_skip "packet socket doesn't support attaching a buffer on this platform"
fi

ts_finalize
