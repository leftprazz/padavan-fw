diff -urN miniupnpd-2.3.6-orig/Makefile.linux miniupnpd-2.3.6/Makefile.linux
--- miniupnpd-2.3.6-orig/Makefile.linux	2022-01-23 02:17:38.000000000 +0200
+++ miniupnpd-2.3.6/Makefile.linux	2024-01-06 01:38:47.059314105 +0200
@@ -27,14 +27,12 @@
 CFLAGS ?= -Os
 CFLAGS += -fno-strict-aliasing
 CFLAGS += -fno-common
-CFLAGS += -fstack-protector -fPIE
-CFLAGS += -D_FORTIFY_SOURCE=2
+CFLAGS += -D_GNU_SOURCE
 CPPFLAGS += -D_GNU_SOURCE
 CFLAGS += -Wall
 CFLAGS += -Wextra -Wstrict-prototypes -Wdeclaration-after-statement
 #CFLAGS += -Wno-missing-field-initializers
 #CFLAGS += -ansi	# iptables headers does use typeof which is a gcc extension
-LDFLAGS += -Wl,-z,now -Wl,-z,relro -pie
 CC ?= gcc
 RM = rm -f
 INSTALL = install
@@ -56,61 +54,13 @@
 include $(SRCDIR)/objects.mk
 
 # sources in netfilter/ directory
-NETFILTEROBJS = iptcrdr.o iptpinhole.o nfct_get.o
+NETFILTEROBJS = netfilter/iptcrdr.o netfilter/iptpinhole.o netfilter/nfct_get.o
 
 ALLOBJS = $(BASEOBJS) $(LNXOBJS) $(NETFILTEROBJS)
 
-DEP = $(ALLOBJS:.o=.d)
-
-NETFILTER_SCRIPTS = $(addprefix $(SRCDIR)/netfilter/, \
-	iptables_init.sh iptables_removeall.sh \
-	ip6tables_init.sh ip6tables_removeall.sh \
-	miniupnpd_functions.sh)
-
-ifneq ($(IPTABLES_PCFILE_FOUND),1)
-
-ifeq "$(wildcard /etc/gentoo-release )" ""
-LDLIBS ?= -liptc
-else # gentoo
-# the following is better, at least on gentoo with iptables 1.4.6
-# see http://miniupnp.tuxfamily.org/forum/viewtopic.php?p=1618
-# and http://miniupnp.tuxfamily.org/forum/viewtopic.php?p=2183
-LDLIBS ?= -lip4tc
-CPPFLAGS := -DIPTABLES_143 $(CPPFLAGS)
-endif
-
-endif # ifneq ($(IPTABLES_PCFILE_FOUND),1)
-
-#LDLIBS += -lnfnetlink
-
-# OpenWrt packager disables https server for IGD v2 and hardcodes libuuid support
-ifeq ($(TARGET_OPENWRT),)
-LDLIBS += $(shell $(PKG_CONFIG) --static --libs-only-l libssl)
-
-TEST := $(shell $(PKG_CONFIG) --exists uuid && echo 1)
-ifeq ($(TEST),1)
-LDLIBS += $(shell $(PKG_CONFIG) --static --libs-only-l uuid)
-else
-$(info please install uuid-dev package / libuuid)
-endif # ($(TEST),1)
-endif # ($(TARGET_OPENWRT,)
-
-ifneq ($(shell ldd --version | grep GLIBC),)
-GLIBC_VERSION := $(shell ldd --version | head -n 1 | sed 's/^.* //')
-GLIBC_VERSION_MAJOR = $(shell echo $(GLIBC_VERSION) | cut -f 1 -d . )
-GLIBC_VERSION_MINOR = $(shell echo $(GLIBC_VERSION) | cut -f 2 -d . )
-# clock_gettime() needs -lrt when glibc version < 2.17
-LDLIBS += $(shell if [ $(GLIBC_VERSION_MAJOR) -lt 2 ] \
-  || [ \( $(GLIBC_VERSION_MAJOR) -eq 2 \) -a \( $(GLIBC_VERSION_MINOR) -lt 17 \) ] ; \
-  then echo "-lrt" ; fi )
-endif
-
 TESTUPNPDESCGENOBJS = testupnpdescgen.o upnpdescgen.o
 
-EXECUTABLES = miniupnpd testupnpdescgen testgetifstats \
-              testupnppermissions miniupnpdctl testgetifaddr \
-              testgetroute testasyncsendto testportinuse \
-              testssdppktgen testminissdp
+EXECUTABLES = miniupnpd miniupnpdctl
 
 .PHONY:	all clean install depend dox
 
@@ -186,6 +136,20 @@
 testminissdp:	testminissdp.o minissdp.o upnputils.o upnpglobalvars.o \
 	asyncsendto.o getroute.o
 
+CFLAGS += -ffunction-sections -fdata-sections -fvisibility=hidden
+LDFLAGS += -Wl,--gc-sections
+
+LDLIBS  = $(IPTABLESPATH)/libiptc/.libs/libip4tc.a
+ifeq ($(ENABLE_IPV6),1)
+LDLIBS += $(IPTABLESPATH)/libiptc/.libs/libip6tc.a
+ifndef DISABLE_NFNETLINK
+CFLAGS += -DUSE_LIBNFNETLINK
+LDLIBS += $(STAGEDIR)/lib/libnfnetlink.a
+endif
+endif
+#LDLIBS += lssl
+CFLAGS += -I$(IPTABLESPATH)/include
+LDFLAGS += -L$(IPTABLESPATH)/libiptc/.libs
 
 miniupnpdctl:	miniupnpdctl.o
 
diff -urN miniupnpd-2.3.6-orig/asyncsendto.c miniupnpd-2.3.6/asyncsendto.c
--- miniupnpd-2.3.6-orig/asyncsendto.c	2020-11-27 20:25:02.000000000 +0200
+++ miniupnpd-2.3.6/asyncsendto.c	2024-01-06 01:38:47.059314105 +0200
@@ -254,7 +254,7 @@
 					/* uncatched error */
 					if(sockaddr_to_string(elt->dest_addr, addr_str, sizeof(addr_str)) <= 0)
 						addr_str[0] = '\0';
-					syslog(LOG_ERR, "%s(sock=%d, len=%u, dest=%s): sendto: %m",
+					syslog(LOG_DEBUG, "%s(sock=%d, len=%u, dest=%s): sendto: %m",
 					       "try_sendto", elt->sockfd, (unsigned)elt->len,
 					       addr_str);
 					ret--;
diff -urN miniupnpd-2.3.6-orig/configure miniupnpd-2.3.6/configure
--- miniupnpd-2.3.6-orig/configure	2024-01-04 03:12:04.000000000 +0200
+++ miniupnpd-2.3.6/configure	2024-01-06 01:38:47.079312345 +0200
@@ -157,14 +157,17 @@
 	echo "Please also set OS_VERSION/--host-os-version and OS_MACHINE/--host-machine"
	exit 1
 fi
 fi
 
+# N56U special case
+OS_NAME=RT-N56U
+
 ${RM} ${CONFIGFILE}
 
 echo "/* MiniUPnP Project" >> ${CONFIGFILE}
 echo " * http://miniupnp.free.fr/ or https://miniupnp.tuxfamily.org/" >> ${CONFIGFILE}
 echo " * (c) 2006-2024 Thomas Bernard" >> ${CONFIGFILE}
-echo " * Generated by $0 on `date`" >> ${CONFIGFILE}
+echo " * Generated by $0 on `LC_ALL=C date -u`" >> ${CONFIGFILE}
 echo " * `uname -a`" >> ${CONFIGFILE}
 if [ -z "$*" ] ; then
 	echo " * using no command line option */" >> ${CONFIGFILE}
@@ -466,6 +469,15 @@
 		echo "#endif" >> ${CONFIGFILE}
 		FW=iptables
 		;;
+	RT-N56U)
+		OS_VERSION=3.4.3.9
+		OS_URL=https://gitlab.com/hadzhioglu/padavan-ng/
+		FW=iptables
+		LEASEFILE=1
+		VENDORCFG=1
+		HAVE_IP_MREQN=1
+		DISABLEPPPCONN=1
+		;;
 	Darwin)
 		MAKEFILE=Makefile.macosx
 		MAJORVER=`echo $OS_VERSION | cut -d. -f1`
@@ -506,88 +518,9 @@
 		echo "# generated by $0 on `date`" > config.mk
 		echo "SRCDIR = ${BASEDIR}" >> config.mk
 		echo "CPPFLAGS += -I." >> config.mk
-		if [ "$PKG_CONFIG" ] ; then
-			if ${PKG_CONFIG} --exists libiptc ; then
-				IPTABLESVERSION=`${PKG_CONFIG} --modversion libiptc`
-				echo "detected libiptc version $IPTABLESVERSION"
-				echo "# detected libiptc version $IPTABLESVERSION" >> config.mk
-				echo "IPTABLES_PCFILE_FOUND = 1" >> config.mk
-				IPTVER1=`echo $IPTABLESVERSION | cut -d. -f1`
-				IPTVER2=`echo $IPTABLESVERSION | cut -d. -f2`
-				IPTVER3=`echo $IPTABLESVERSION | cut -d. -f3`
-				if [ $IPTVER1 -gt 1 ] || \
-				   [ \( $IPTVER1 -eq 1 \) -a \( \( $IPTVER2 -gt 4 \) \
-				     -o \( \( $IPTVER2 -eq 4 \) -a \( $IPTVER3 -ge 3 \) \) \) ] ; then
-					IPTABLES_143=1
-				fi
-				echo "CFLAGS += `${PKG_CONFIG} --cflags libiptc`" >> config.mk
-				echo "LDLIBS += `${PKG_CONFIG} --static --libs-only-l libiptc`" >> config.mk
-				echo "LDFLAGS += `${PKG_CONFIG} --libs-only-L --libs-only-other libiptc`" >> config.mk
-			else
-				echo "Warning: no libiptc pkg-config found"
-			fi
-			if ${PKG_CONFIG} --atleast-version=1.0.2 libnetfilter_conntrack \
-			   && ${PKG_CONFIG} --atleast-version=1.0.3 libmnl ; then
-				echo "CPPFLAGS += -DUSE_NFCT" >> config.mk
-				echo "LDLIBS += `${PKG_CONFIG} --static --libs-only-l libmnl libnetfilter_conntrack`" >> config.mk
-			fi
-		fi
-		if [ "$IPTABLESPATH" ] ; then
-			echo "CPPFLAGS += -I${IPTABLESPATH}/include/" >> config.mk
-			echo "LDFLAGS += -L${IPTABLESPATH}/libiptc/" >> config.mk
-			# to test : change the following test to [ "$OS_NAME" != "OpenWrt" ]
-			if [ -z "$TARGET_OPENWRT" ] ; then
-				IPTABLESVERSION=`grep "\#define VERSION" ${IPTABLESPATH}/config.h | tr -d \" |cut -d" " -f3`
-				echo "detected libiptc version $IPTABLESVERSION"
-				echo "# detected libiptc version $IPTABLESVERSION" >> config.mk
-				IPTVER1=`echo $IPTABLESVERSION | cut -d. -f1`
-				IPTVER2=`echo $IPTABLESVERSION | cut -d. -f2`
-				IPTVER3=`echo $IPTABLESVERSION | cut -d. -f3`
-				if [ $IPTVER1 -gt 1 ] || \
-				   [ \( $IPTVER1 -eq 1 \) -a \( \( $IPTVER2 -gt 4 \) \
-				     -o \( \( $IPTVER2 -eq 4 \) -a \( $IPTVER3 -ge 3 \) \) \) ] ; then
-					IPTABLES_143=1
-				fi
-				if [ "$IPTABLES_143" = "1" ] ; then
-					echo "LDLIBS += ${IPTABLESPATH}/libiptc/.libs/libip4tc.o" >> config.mk
-				else
-					echo "LDLIBS += ${IPTABLESPATH}/libiptc/libiptc.a" >> config.mk
-				fi
-			else
-				# OpenWrt
-				# check for system-wide iptables files. Test if iptables version >= 1.4.3
-				# the following test has to be verified :
-				if test -f /usr/include/iptables/internal.h && \
-				   grep -q "\#define IPTABLES_VERSION" /usr/include/iptables/internal.h ; then
-					IPTABLES_143=1
-					echo "LDLIBS += -liptc" >> config.mk
-				fi
-				arch=`echo $OS_MACHINE | grep -q x86_64 && echo 64`
-				if test -f /usr/lib${arch}/libiptc.a ; then
-					echo "LDLIBS += -liptc /usr/lib${arch}/libiptc.a" >> config.mk
-				fi
-			fi
-		elif [ -z "${PKG_CONFIG}" ] ; then
-			# IPTABLESPATH not defined and no pkg-config
-			if test -f /usr/include/xtables.h && \
-			   grep -q "XTABLES_VERSION_CODE" /usr/include/xtables.h ; then
-				IPTABLES_143=1
-				echo "LDLIBS += -liptc" >> config.mk
-				if test -f /lib/libip4tc.so ; then
-					echo "LDLIBS += -lip4tc" >> config.mk
-				fi
-				if test -f /lib/libip6tc.so ; then
-					echo "LDLIBS += -lip6tc" >> config.mk
-				fi
-			fi
-		fi
 		echo "/* when IPTABLES_143 is defined, miniupnpd uses the new API" >> ${CONFIGFILE}
 		echo " * from libiptc 1.4.3+ */ " >> ${CONFIGFILE}
-		if [ "$IPTABLES_143" = "1" ] ; then
-			echo "#define IPTABLES_143" >> ${CONFIGFILE}
-		else
-			echo "#undef IPTABLES_143" >> ${CONFIGFILE}
-		fi
+		echo "#define IPTABLES_143" >> ${CONFIGFILE}
 		;;
 	nftables)
 		MAKEFILE=Makefile.linux_nft
@@ -643,6 +576,9 @@
 	OpenWRT)
 		echo "#define LIB_UUID" >> ${CONFIGFILE}
 		;;
+	RT-N56U)
+		#echo "#define LIB_UUID" >> ${CONFIGFILE}
+		;;
 	*)
 		if grep uuid_create /usr/include/uuid.h > /dev/null 2>&1 ; then
 			echo "#define BSD_UUID" >> ${CONFIGFILE}
@@ -667,9 +603,9 @@
 	echo "#define SUPPORT_REMOTEHOST" >> ${CONFIGFILE}
 fi
 
-echo "/* Enable IGD2 \"Port Triggering\" as defined in Section 2.5.16" >> ${CONFIGFILE}
-echo " * figure 2.2 in UPnP-gw-WANIPConnection-v2-Service.pdf */" >> ${CONFIGFILE}
-echo "#define ENABLE_PORT_TRIGGERING" >> ${CONFIGFILE}
+#echo "/* Enable IGD2 \"Port Triggering\" as defined in Section 2.5.16" >> ${CONFIGFILE}
+#echo " * figure 2.2 in UPnP-gw-WANIPConnection-v2-Service.pdf */" >> ${CONFIGFILE}
+#echo "#define ENABLE_PORT_TRIGGERING" >> ${CONFIGFILE}
 
 echo "" >> ${CONFIGFILE}
 echo "#define OS_NAME		\"$OS_NAME\"" >> ${CONFIGFILE}
@@ -726,9 +662,9 @@
 
 echo "/* Uncomment the following line to enable caching of results of" >> ${CONFIGFILE}
 echo " * the getifstats() function */" >> ${CONFIGFILE}
-echo "/*#define ENABLE_GETIFSTATS_CACHING*/" >> ${CONFIGFILE}
+echo "#define ENABLE_GETIFSTATS_CACHING" >> ${CONFIGFILE}
 echo "/* The cache duration is indicated in seconds */" >> ${CONFIGFILE}
-echo "#define GETIFSTATS_CACHING_DURATION 2" >> ${CONFIGFILE}
+echo "#define GETIFSTATS_CACHING_DURATION 3" >> ${CONFIGFILE}
 echo "" >> ${CONFIGFILE}
 
 echo "/* Uncomment the following line to enable multiple external ip support */" >> ${CONFIGFILE}
@@ -838,7 +774,7 @@
 echo "" >> ${CONFIGFILE}
 
 echo "/* include interface name in pf and ipf rules */" >> ${CONFIGFILE}
-echo "#define USE_IFNAME_IN_RULES" >> ${CONFIGFILE}
+echo "/*#define USE_IFNAME_IN_RULES*/" >> ${CONFIGFILE}
 echo "" >> ${CONFIGFILE}
 
 echo "/* Experimental NFQUEUE support. */" >> ${CONFIGFILE}
diff -urN miniupnpd-2.3.6-orig/getifaddr.c miniupnpd-2.3.6/getifaddr.c
--- miniupnpd-2.3.6-orig/getifaddr.c	2024-01-04 03:07:54.000000000 +0200
+++ miniupnpd-2.3.6/getifaddr.c	2024-01-06 01:38:47.063313753 +0200
@@ -35,9 +35,9 @@
 	/* SIOCGIFADDR struct ifreq *  */
 	int s;
 	struct ifreq ifr;
-	int ifrlen;
+	int ifrlen = sizeof(ifr);
 	struct sockaddr_in * ifaddr;
-	ifrlen = sizeof(ifr);
+	int ret = -1;
 
 	if(!ifname || ifname[0]=='\0')
 		return -1;
@@ -52,22 +52,19 @@
 	if(ioctl(s, SIOCGIFFLAGS, &ifr, &ifrlen) < 0)
 	{
 		syslog(LOG_DEBUG, "ioctl(s, SIOCGIFFLAGS, ...): %m");
-		close(s);
-		return -1;
+		goto err;
 	}
 	if ((ifr.ifr_flags & IFF_UP) == 0)
 	{
 		syslog(LOG_DEBUG, "network interface %s is down", ifname);
-		close(s);
-		return -1;
+		goto err;
 	}
 	strncpy(ifr.ifr_name, ifname, IFNAMSIZ-1);
 	ifr.ifr_name[IFNAMSIZ-1] = '\0';
 	if(ioctl(s, SIOCGIFADDR, &ifr, &ifrlen) < 0)
 	{
-		syslog(LOG_ERR, "ioctl(s, SIOCGIFADDR, ...): %m");
-		close(s);
-		return -1;
+		syslog(LOG_DEBUG, "ioctl(s, SIOCGIFADDR, ...): %m");
+		goto err;
 	}
 	ifaddr = (struct sockaddr_in *)&ifr.ifr_addr;
 	if(addr) *addr = ifaddr->sin_addr;
@@ -76,8 +73,7 @@
 		if(!inet_ntop(AF_INET, &ifaddr->sin_addr, buf, len))
 		{
 			syslog(LOG_ERR, "inet_ntop(): %m");
-			close(s);
-			return -1;
+			goto err;
 		}
 	}
 	if(mask)
@@ -86,9 +82,8 @@
 		ifr.ifr_name[IFNAMSIZ-1] = '\0';
 		if(ioctl(s, SIOCGIFNETMASK, &ifr, &ifrlen) < 0)
 		{
-			syslog(LOG_ERR, "ioctl(s, SIOCGIFNETMASK, ...): %m");
-			close(s);
-			return -1;
+			syslog(LOG_DEBUG, "ioctl(s, SIOCGIFNETMASK, ...): %m");
+			goto err;
 		}
 #ifdef ifr_netmask
 		*mask = ((struct sockaddr_in *)&ifr.ifr_netmask)->sin_addr;
@@ -96,7 +91,10 @@
 		*mask = ((struct sockaddr_in *)&ifr.ifr_addr)->sin_addr;
 #endif
 	}
+	ret = 0;
+err:
 	close(s);
+	return ret;
 #else /* ifndef USE_GETIFADDRS */
 	/* Works for all address families (both ip v4 and ip v6) */
 	struct ifaddrs * ifap;
@@ -107,7 +105,7 @@
 		return -1;
 	if(getifaddrs(&ifap)<0)
 	{
-		syslog(LOG_ERR, "getifaddrs: %m");
+		syslog(LOG_DEBUG, "getifaddrs: %m");
 		return -1;
 	}
 	for(ife = ifap; ife; ife = ife->ifa_next)
@@ -155,8 +153,9 @@
		if(mask) *mask = ((struct sockaddr_in *)candidate->ifa_netmask)->sin_addr;
	}
	freeifaddrs(ifap);
-#endif
+
 	return 0;
+#endif
 }
 
 #ifdef ENABLE_PCP
@@ -250,7 +249,7 @@
 
 	if(getifaddrs(&ifap)<0)
 	{
-		syslog(LOG_ERR, "getifaddrs: %m");
+		syslog(LOG_DEBUG, "getifaddrs: %m");
 		return -1;
 	}
 	for(ife = ifap; ife; ife = ife->ifa_next)
diff -urN miniupnpd-2.3.6-orig/linux/getifstats.c miniupnpd-2.3.6/linux/getifstats.c
--- miniupnpd-2.3.6-orig/linux/getifstats.c	2020-05-10 21:11:16.000000000 +0300
+++ miniupnpd-2.3.6/linux/getifstats.c	2024-01-06 01:38:47.063313753 +0200
@@ -77,7 +77,9 @@
 	char * p;
 	int i;
 	int r = -1;
+#if 0
 	char fname[64];
+#endif
 #ifdef ENABLE_GETIFSTATS_CACHING
 	static time_t cache_timestamp = 0;
 	static struct ifdata cache_data;
@@ -141,7 +143,9 @@
 		break;
 	}
 	fclose(f);
+#if 0 /* Disable get speed */
 	/* get interface speed */
+	/* NB! some interfaces, like ppp, don't support speed queries */
 	snprintf(fname, sizeof(fname), "/sys/class/net/%s/speed", ifname);
 	f = fopen(fname, "r");
 	if(f) {
@@ -154,6 +158,7 @@
 	} else {
 		syslog(LOG_INFO, "cannot read %s file : %m", fname);
 	}
+#endif
 #ifdef GET_WIRELESS_STATS
 	if(data->baudrate == BAUDRATE_DEFAULT) {
 		struct iwreq iwr;
diff -urN miniupnpd-2.3.6-orig/minissdp.c miniupnpd-2.3.6/minissdp.c
--- miniupnpd-2.3.6-orig/minissdp.c	2024-01-04 02:43:46.000000000 +0200
+++ miniupnpd-2.3.6/minissdp.c	2024-01-06 01:38:47.063313753 +0200
@@ -197,10 +197,12 @@
 	{
 		syslog(LOG_WARNING, "setsockopt(udp, SO_REUSEADDR): %m");
 	}
+/*
 	if (setsockopt(s, SOL_SOCKET, SO_REUSEPORT, &on, sizeof(on)) < 0)
 	{
 		syslog(LOG_WARNING, "setsockopt(udp, SO_REUSEPORT): %m");
 	}
+*/
 #ifdef IP_RECVIF
 	/* BSD */
 	if(!ipv6) {
@@ -595,7 +597,7 @@
 	       n, addr_str, l, buf);
 	if(n < 0)
 	{
-		syslog(LOG_ERR, "%s: sendto(udp): %m",
+		syslog(LOG_DEBUG, "%s: sendto(udp): %m",
 		       "SendSSDPResponse()");
 	}
 }
@@ -711,7 +713,7 @@
 	}
 	n = sendto_or_schedule(s, bufr, l, 0, dest, dest_len);
 	if(n < 0) {
-		syslog(LOG_ERR, "sendto(udp_notify=%d, %s): %m", s,
+		syslog(LOG_DEBUG, "sendto(udp_notify=%d, %s): %m", s,
 		       host ? host : "NULL");
 	} else if(n != l) {
 		syslog(LOG_NOTICE, "sendto() sent %d out of %d bytes", n, l);
@@ -1020,7 +1022,7 @@
 			if(lan_addr->index != (unsigned)source_if && lan_addr->index != 0)
 #endif
 			{
-				syslog(LOG_WARNING, "interface index not matching %u != %d", lan_addr->index, source_if);
+				syslog(LOG_DEBUG, "interface index not matching %u != %d", lan_addr->index, source_if);
 			}
 		}
 		else
@@ -1037,7 +1039,7 @@
 	}
 	if(lan_addr == NULL)
 	{
-		syslog(LOG_WARNING, "SSDP packet sender %s (if_index=%d) not from a LAN, ignoring",
+		syslog(LOG_DEBUG, "SSDP packet sender %s (if_index=%d) not from a LAN, ignoring",
 		       sender_str, source_if);
 		return;
 	}
@@ -1153,7 +1155,7 @@
 			{
 				if (lan_addr == NULL)
 				{
-					syslog(LOG_ERR,
+					syslog(LOG_INFO,
 					       "Can't find in which sub network the client %s is",
 					       sender_str);
 					return;
@@ -1364,7 +1366,7 @@
 	}
 	else
 	{
-		syslog(LOG_NOTICE, "Unknown udp packet received from %s", sender_str);
+		syslog(LOG_DEBUG, "Unknown udp packet received from %s", sender_str);
 	}
 }
 
@@ -1408,7 +1410,7 @@
 	n = sendto_or_schedule(s, bufr, l, 0, dest, destlen);
 	if(n < 0)
 	{
-		syslog(LOG_ERR, "sendto(udp_shutdown=%d): %m", s);
+		syslog(LOG_DEBUG, "sendto(udp_shutdown=%d): %m", s);
 		return -1;
 	}
 	else if(n != l)
diff -urN miniupnpd-2.3.6-orig/miniupnpd.c miniupnpd-2.3.6/miniupnpd.c
--- miniupnpd-2.3.6-orig/miniupnpd.c	2023-06-12 02:23:55.000000000 +0300
+++ miniupnpd-2.3.6/miniupnpd.c	2024-01-06 01:38:47.075312697 +0200
@@ -477,7 +477,7 @@
 		if(get_lan_for_peer((struct sockaddr *)&clientname) == NULL)
 		{
 			/* The peer is not a LAN ! */
-			syslog(LOG_WARNING,
+			syslog(LOG_DEBUG,
 			       "%s peer %s is not from a LAN, closing the connection",
 			       protocol, addr_str);
 			close(shttp);
@@ -2273,7 +2273,7 @@
 		return 0;
 	}
 
-	syslog(LOG_INFO, "version " MINIUPNPD_VERSION " starting%s%sext if %s BOOTID=%u",
+	syslog(LOG_NOTICE, "version " MINIUPNPD_VERSION " starting%s%sext if %s BOOTID=%u",
 #ifdef ENABLE_NATPMP
 #ifdef ENABLE_PCP
 	       GETFLAG(ENABLENATPMPMASK) ? " NAT-PMP/PCP " : " ",
@@ -2630,6 +2630,9 @@
 			}
 #endif
 			should_send_public_address_change_notif = 0;
+#ifdef ENABLE_LEASEFILE
+			reload_from_lease_file();
+#endif
 		}
 		/* Check if we need to send SSDP NOTIFY messages and do it if
 		 * needed */
@@ -2876,7 +2879,7 @@
 		}
 		i = try_sendto(&writeset);
 		if(i < 0) {
-			syslog(LOG_ERR, "try_sendto failed to send %d packets", -i);
+			syslog(LOG_DEBUG, "try_sendto failed to send %d packets", -i);
 		}
 #ifdef USE_MINIUPNPDCTL
 		for(ectl = ctllisthead.lh_first; ectl;)
@@ -2976,7 +2979,7 @@
 					if(lan_addr == NULL) {
 						char sender_str[64];
 						sockaddr_to_string((struct sockaddr *)&senderaddr, sender_str, sizeof(sender_str));
-						syslog(LOG_WARNING, "NAT-PMP packet sender %s not from a LAN, ignoring",
+						syslog(LOG_DEBUG, "NAT-PMP packet sender %s not from a LAN, ignoring",
 						       sender_str);
 						continue;
 					}
@@ -2999,7 +3002,7 @@
 				if(lan_addr == NULL) {
 					char sender_str[64];
 					sockaddr_to_string((struct sockaddr *)&senderaddr, sender_str, sizeof(sender_str));
-					syslog(LOG_WARNING, "NAT-PMP packet sender %s not from a LAN, ignoring",
+					syslog(LOG_DEBUG, "NAT-PMP packet sender %s not from a LAN, ignoring",
 					       sender_str);
 					continue;
 				}
@@ -3148,7 +3151,7 @@
 		if(SendSSDPGoodbye(snotify, addr_count * 2) < 0)
 #endif
 		{
-			syslog(LOG_ERR, "Failed to broadcast good-bye notifications");
+			syslog(LOG_DEBUG, "Failed to broadcast good-bye notifications");
 		}
 	}
 	/* try to send pending packets */
diff -urN miniupnpd-2.3.6-orig/natpmp.c miniupnpd-2.3.6/natpmp.c
--- miniupnpd-2.3.6-orig/natpmp.c	2022-10-22 00:10:28.000000000 +0300
+++ miniupnpd-2.3.6/natpmp.c	2024-01-06 01:38:47.067313401 +0200
@@ -106,7 +106,7 @@
 			resp[3] = 3;	/* Network Failure (e.g. NAT box itself
 			                 * has not obtained a DHCP lease) */
 		} else if(getifaddr(ext_if_name, tmp, INET_ADDRSTRLEN, &addr, NULL) < 0) {
-			syslog(LOG_ERR, "Failed to get IP for interface %s", ext_if_name);
+			syslog(LOG_DEBUG, "Failed to get IP for interface %s", ext_if_name);
 			resp[3] = 3;	/* Network Failure (e.g. NAT box itself
 			                 * has not obtained a DHCP lease) */
 		} else if (addr_is_reserved(&addr)) {
@@ -314,7 +314,7 @@
 						if((iport == 0) || ((iport == iport2) && (proto == proto2))) {
 							r = _upnp_delete_redir(eport2, proto2);
 							if(r < 0) {
-								syslog(LOG_ERR, "Failed to remove NAT-PMP mapping eport %hu, protocol %s",
+								syslog(LOG_DEBUG, "Failed to remove NAT-PMP mapping eport %hu, protocol %s",
 								       eport2, (proto2==IPPROTO_TCP)?"TCP":"UDP");
 								resp[3] = 2;	/* Not Authorized/Refused */
 								break;
@@ -394,7 +394,7 @@
 					if(upnp_redirect_internal(NULL, eport, senderaddrstr,
 					                          iport, proto, desc,
 					                          timestamp) < 0) {
-						syslog(LOG_ERR, "Failed to add NAT-PMP %hu %s->%s:%hu '%s'",
+						syslog(LOG_DEBUG, "Failed to add NAT-PMP %hu %s->%s:%hu '%s'",
 						       eport, (proto==IPPROTO_TCP)?"tcp":"udp", senderaddrstr, iport, desc);
 						resp[3] = 3;  /* Failure */
 					}
@@ -413,7 +413,7 @@
 	n = sendto_or_schedule(s, resp, resplen, 0,
 	           (struct sockaddr *)senderaddr, sizeof(*senderaddr));
 	if(n<0) {
-		syslog(LOG_ERR, "sendto(natpmp): %m");
+		syslog(LOG_DEBUG, "sendto(natpmp): %m");
 	} else if(n<resplen) {
 		syslog(LOG_ERR, "sendto(natpmp): sent only %d bytes out of %d",
 		       n, resplen);
diff -urN miniupnpd-2.3.6-orig/netfilter/Makefile miniupnpd-2.3.6/netfilter/Makefile
--- miniupnpd-2.3.6-orig/netfilter/Makefile	2020-03-29 12:08:55.000000000 +0300
+++ miniupnpd-2.3.6/netfilter/Makefile	2024-01-06 01:38:47.067313401 +0200
@@ -1,48 +1,17 @@
 # $Id: Makefile,v 1.9 2020/03/22 22:47:19 nanard Exp $
 CFLAGS?=-Wall -g -D_GNU_SOURCE -DDEBUG -Wstrict-prototypes -Wdeclaration-after-statement
-CC = gcc
+CC ?= gcc
 
-#LIBS = -liptc
-LIBS = -lip4tc
-
-ARCH := $(shell uname -m | grep -q "x86_64" && echo 64)
-ifdef IPTABLESPATH
-CFLAGS := $(CFLAGS) -I$(IPTABLESPATH)/include/
-LDFLAGS := $(LDFLAGS) -L$(IPTABLESPATH)/libiptc/
-# get iptables version and set IPTABLES_143 macro if needed
-IPTABLESVERSION := $(shell grep "\#define VERSION" $(IPTABLESPATH)/config.h | tr -d \" |cut -d" " -f3 )
-IPTABLESVERSION1 := $(shell echo $(IPTABLESVERSION) | cut -d. -f1 )
-IPTABLESVERSION2 := $(shell echo $(IPTABLESVERSION) | cut -d. -f2 )
-IPTABLESVERSION3 := $(shell echo $(IPTABLESVERSION) | cut -d. -f3 )
-# test if iptables version >= 1.4.3
-TEST := $(shell [ \( \( $(IPTABLESVERSION1) -ge 1 \) -a \( $(IPTABLESVERSION2) -ge 4 \) \) -a \( $(IPTABLESVERSION3) -ge 3 \) ] && echo 1 )
-ifeq ($(TEST), 1)
-CFLAGS := $(CFLAGS) -DIPTABLES_143
 # the following sucks, but works
-LIBS = $(IPTABLESPATH)/libiptc/.libs/libip4tc.o
-#LIBS = $(IPTABLESPATH)/libiptc/.libs/libiptc.a
-else
-LIBS = $(IPTABLESPATH)/libiptc/libiptc.a
-endif
-else
-# check for system-wide iptables files. Test if iptables version >= 1.4.3
-#TEST := $(shell test -f /usr/include/iptables/internal.h && grep -q "\#define IPTABLES_VERSION" /usr/include/iptables/internal.h && echo 1)
-TEST := $(shell test -f /usr/include/xtables.h && grep -q "XTABLES_VERSION_CODE" /usr/include/xtables.h && echo 1)
-ifeq ($(TEST), 1)
-CFLAGS := $(CFLAGS) -DIPTABLES_143
-LIBS = -liptc
-TEST_LIB := $(shell test -f /usr/lib$(ARCH)/libiptc.a && echo 1)
-ifeq ($(TEST_LIB), 1)
-LIBS = -liptc /usr/lib$(ARCH)/libiptc.a
-endif
-endif
+LIBS  = $(IPTABLESPATH)/libiptc/.libs/libip4tc.a
+ifeq ($(ENABLE_IPV6),1)
+LIBS += $(IPTABLESPATH)/libiptc/.libs/libip6tc.a
 endif
 
-LIBS +=  /lib/libip4tc.so /lib/libip6tc.so
+CFLAGS += -I$(IPTABLESPATH)/include/
+LDFLAGS += -L$(IPTABLESPATH)/libiptc/.libs
 
-all:	iptcrdr.o testiptcrdr iptpinhole.o \
-        testiptcrdr_peer testiptcrdr_dscp test_nfct_get
-#        testiptpinhole
+all:	iptcrdr.o iptpinhole.o
 
 clean:
 	$(RM) *.o testiptcrdr testiptpinhole testiptcrdr_peer test_nfct_get \
diff -urN miniupnpd-2.3.6-orig/netfilter/iptcrdr.c miniupnpd-2.3.6/netfilter/iptcrdr.c
--- miniupnpd-2.3.6-orig/netfilter/iptcrdr.c	2022-01-23 02:17:39.000000000 +0200
+++ miniupnpd-2.3.6/netfilter/iptcrdr.c	2024-01-06 01:38:47.067313401 +0200
@@ -14,7 +14,9 @@
 #include <netinet/in.h>
 #include <arpa/inet.h>
 #include <dlfcn.h>
+#ifdef IPTABLES_143
 #include <xtables.h>
+#endif
 #include <linux/netfilter/xt_DSCP.h>
 #include <libiptc/libiptc.h>
 
@@ -44,7 +46,7 @@
 #else
 /* IPTABLES API version < 1.4.3 */
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,22)
-#include <linux/netfilter_ipv4/ip_nat.h>
+#include <linux/netfilter/nf_nat.h>
 #else
 #if 0
 #include <linux/netfilter/nf_nat.h>
@@ -68,15 +70,15 @@
 
 /* iptables -t nat -N MINIUPNPD
  * iptables -t nat -A PREROUTING -i <ext_if_name> -j MINIUPNPD */
-static const char * miniupnpd_nat_chain = "MINIUPNPD";
+static const char * miniupnpd_nat_chain = "upnp";
 
 /* iptables -t nat -N MINIUPNPD-POSTROUTING
  * iptables -t nat -A POSTROUTING -o <ext_if_name> -j MINIUPNPD-POSTROUTING */
-static const char * miniupnpd_nat_postrouting_chain = "MINIUPNPD-POSTROUTING";
+static const char * miniupnpd_nat_postrouting_chain = "upnp-post";
 
 /* iptables -t filter -N MINIUPNPD
  * iptables -t filter -A FORWARD -i <ext_if_name> ! -o <ext_if_name> -j MINIUPNPD */
-static const char * miniupnpd_forward_chain = "MINIUPNPD";
+static const char * miniupnpd_forward_chain = "upnp";
 
 /**
  * used by the core to override default chain names if specified in config file
diff -urN miniupnpd-2.3.6-orig/netfilter/iptpinhole.c miniupnpd-2.3.6/netfilter/iptpinhole.c
--- miniupnpd-2.3.6-orig/netfilter/iptpinhole.c	2022-10-16 08:47:15.000000000 +0300
+++ miniupnpd-2.3.6/netfilter/iptpinhole.c	2024-01-06 01:38:47.067313401 +0200
@@ -28,7 +28,7 @@
 
 static int next_uid = 1;
 
-static const char * miniupnpd_v6_filter_chain = "MINIUPNPD";
+static const char * miniupnpd_v6_filter_chain = "upnp";
 
 static LIST_HEAD(pinhole_list_t, pinhole_t) pinhole_list;
 
diff -urN miniupnpd-2.3.6-orig/objects.mk miniupnpd-2.3.6/objects.mk
--- miniupnpd-2.3.6-orig/objects.mk	2020-05-10 19:59:19.000000000 +0300
+++ miniupnpd-2.3.6/objects.mk	2024-01-06 01:38:47.067313401 +0200
@@ -6,4 +6,7 @@
            upnpstun.o upnppinhole.o pcplearndscp.o asyncsendto.o
 
 # sources in linux/ directory
-LNXOBJS = getifstats.o ifacewatcher.o getroute.o
+LNXOBJS = linux/getifstats.o linux/ifacewatcher.o
+ifeq ($(ENABLE_IPV6),1)
+LNXOBJS += linux/getroute.o
+endif
diff -urN miniupnpd-2.3.6-orig/pcpserver.c miniupnpd-2.3.6/pcpserver.c
--- miniupnpd-2.3.6-orig/pcpserver.c	2022-10-22 00:10:28.000000000 +0300
+++ miniupnpd-2.3.6/pcpserver.c	2024-01-06 01:38:47.071313049 +0200
@@ -1594,7 +1594,7 @@
 	if (!GETFLAG(PCP_ALLOWTHIRDPARTYMASK)) {
 		lan_addr = get_lan_for_peer(senderaddr);
 		if(lan_addr == NULL) {
-			syslog(LOG_WARNING, "PCP packet sender %s not from a LAN, ignoring",
+			syslog(LOG_DEBUG, "PCP packet sender %s not from a LAN, ignoring",
 			       addr_str);
 			return 0;
 		}
@@ -1614,7 +1614,7 @@
 		                  sizeof(struct sockaddr_in6),
 		           receiveraddr);
 		if( len < 0 ) {
-			syslog(LOG_ERR, "sendto(pcpserver): %m");
+			syslog(LOG_DEBUG, "sendto(pcpserver): %m");
 		}
 	}
 
diff -urN miniupnpd-2.3.6-orig/upnpevents.c miniupnpd-2.3.6/upnpevents.c
--- miniupnpd-2.3.6-orig/upnpevents.c	2019-09-24 14:51:15.000000000 +0300
+++ miniupnpd-2.3.6/upnpevents.c	2024-01-06 01:38:47.071313049 +0200
@@ -491,7 +491,7 @@
 	i = send(obj->s, obj->buffer + obj->sent, obj->tosend - obj->sent, 0);
 	if(i<0) {
 		if(errno != EAGAIN && errno != EWOULDBLOCK && errno != EINTR) {
-			syslog(LOG_NOTICE, "%s: send(%s%s): %m", "upnp_event_send",
+			syslog(LOG_DEBUG, "%s: send(%s%s): %m", "upnp_event_send",
 			       obj->addrstr, obj->portstr);
 			obj->state = EError;
 			return;
@@ -516,7 +516,7 @@
 		if(errno != EAGAIN &&
 		   errno != EWOULDBLOCK &&
 		   errno != EINTR) {
-			syslog(LOG_ERR, "%s: recv(): %m", "upnp_event_recv");
+			syslog(LOG_DEBUG, "%s: recv(): %m", "upnp_event_recv");
 			obj->state = EError;
 		}
 		return;
@@ -547,7 +547,7 @@
 		}
 		if(err != 0) {
 			errno = err;
-			syslog(LOG_WARNING, "%s: connect(%s%s): %m",
+			syslog(LOG_DEBUG, "%s: connect(%s%s): %m",
 			       "upnp_event_process_notify",
 			       obj->addrstr, obj->portstr);
 			obj->state = EError;
@@ -632,7 +632,7 @@
 				obj->sub->notify = NULL;
 			/* remove also the subscriber from the list if there was an error */
 			if(obj->state == EError && obj->sub) {
-				syslog(LOG_ERR, "%s: %p, remove subscriber %s after an ERROR cb: %s",
+				syslog(LOG_DEBUG, "%s: %p, remove subscriber %s after an ERROR cb: %s",
 				       "upnpevents_processfds", obj, obj->sub->uuid, obj->sub->callback);
 				LIST_REMOVE(obj->sub, entries);
 				free(obj->sub);
diff -urN miniupnpd-2.3.6-orig/upnphttp.c miniupnpd-2.3.6/upnphttp.c
--- miniupnpd-2.3.6-orig/upnphttp.c	2024-01-04 02:43:46.000000000 +0200
+++ miniupnpd-2.3.6/upnphttp.c	2024-01-06 01:38:47.071313049 +0200
@@ -13,6 +13,7 @@
 #include <string.h>
 #include <sys/types.h>
 #include <sys/socket.h>
+#include <arpa/inet.h>
 #include <sys/param.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
@@ -892,7 +893,7 @@
 			return;
 		}
 #endif
-		syslog(LOG_NOTICE, "%s not found, responding ERROR 404", HttpUrl);
+		syslog(LOG_INFO, "%s not found, responding ERROR 404", HttpUrl);
 		Send404(h);
 	}
 #ifdef ENABLE_EVENTS
@@ -915,7 +916,7 @@
 #endif
 	else
 	{
-		syslog(LOG_NOTICE, "Unsupported HTTP Command %s", HttpCommand);
+		syslog(LOG_DEBUG, "Unsupported HTTP Command %s", HttpCommand);
 		Send501(h);
 	}
 }
@@ -976,12 +977,12 @@
 				char clientaddr_str[INET6_ADDRSTRLEN];
 				if(inet_ntop(AF_INET6, &(h->clientaddr_v6), clientaddr_str, INET6_ADDRSTRLEN) == NULL)
 					strncpy(clientaddr_str, "*inet_ntop error*", sizeof(clientaddr_str));
-				syslog(LOG_WARNING, "HTTP Connection from %s closed unexpectedly", clientaddr_str);
+				syslog(LOG_DEBUG, "HTTP Connection from %s closed unexpectedly", clientaddr_str);
 			}
 			else
 #endif
 			{
-				syslog(LOG_WARNING, "HTTP Connection from %s closed unexpectedly", inet_ntoa(h->clientaddr));
+				syslog(LOG_DEBUG, "HTTP Connection from %s closed unexpectedly", inet_ntoa(h->clientaddr));
 			}
 			h->state = EToDelete;
 		}
diff -urN miniupnpd-2.3.6-orig/upnpredirect.c miniupnpd-2.3.6/upnpredirect.c
--- miniupnpd-2.3.6-orig/upnpredirect.c	2022-10-22 00:10:28.000000000 +0300
+++ miniupnpd-2.3.6/upnpredirect.c	2024-01-06 01:38:47.071313049 +0200
@@ -207,7 +207,7 @@
 	if(!lease_file) return -1;
 	fd = fopen( lease_file, "r");
 	if (fd==NULL) {
-		syslog(LOG_ERR, "could not open lease file: %s", lease_file);
+		syslog(LOG_DEBUG, "could not open lease file: %s", lease_file);
 		return -1;
 	}
 	if(unlink(lease_file) < 0) {
@@ -679,7 +679,7 @@
 	{
 		if(tmp->to_remove)
 		{
-			syslog(LOG_NOTICE, "remove port mapping %hu %s because it has expired",
+			syslog(LOG_INFO, "remove port mapping %hu %s because it has expired",
 			       tmp->eport, proto_itoa(tmp->proto));
 			_upnp_delete_redir(tmp->eport, tmp->proto);
 			*p = tmp->next;
@@ -725,7 +725,7 @@
 				       "%" PRIu64 "packets %" PRIu64 "bytes",
 				       list->eport, proto_itoa(list->proto),
 				       packets, bytes);
-				_upnp_delete_redir(list->eport, list->proto);
+				if(_upnp_delete_redir(list->eport, list->proto) >= 0)
 				n++;
 			}
 		}
diff -urN miniupnpd-2.3.6-orig/upnpsoap.c miniupnpd-2.3.6/upnpsoap.c
--- miniupnpd-2.3.6-orig/upnpsoap.c	2024-01-04 03:07:54.000000000 +0200
+++ miniupnpd-2.3.6/upnpsoap.c	2024-01-06 01:38:47.071313049 +0200
@@ -343,7 +343,7 @@
 		struct in_addr addr;
 		if(getifaddr(ext_if_name, ext_ip_addr, INET_ADDRSTRLEN, &addr, NULL) < 0)
 		{
-			syslog(LOG_ERR, "Failed to get ip address for interface %s",
+			syslog(LOG_DEBUG, "Failed to get ip address for interface %s",
 				ext_if_name);
 			ext_ip_addr[0] = '\0';
 		} else if (addr_is_reserved(&addr)) {
@@ -464,7 +464,7 @@
 		}
 		else
 		{
-			syslog(LOG_ERR, "Failed to convert hostname '%s' to ip address", int_ip);
+			syslog(LOG_DEBUG, "Failed to convert hostname '%s' to ip address", int_ip);
 			ClearNameValueList(&data);
 			SoapError(h, 402, "Invalid Args");
 			return;
@@ -663,7 +663,7 @@
 		}
 		else
 		{
-			syslog(LOG_ERR, "Failed to convert hostname '%s' to ip address", int_ip);
+			syslog(LOG_DEBUG, "Failed to convert hostname '%s' to ip address", int_ip);
 			ClearNameValueList(&data);
 			SoapError(h, 402, "Invalid Args");
 			return;
@@ -1462,7 +1462,7 @@
 	}
 	else
 	{
-		syslog(LOG_NOTICE, "%s: Unknown: %s", action, var_name?var_name:"");
+		syslog(LOG_DEBUG, "%s: Unknown: %s", action, var_name?var_name:"");
 		SoapError(h, 404, "Invalid Var");
 	}
 
@@ -1628,7 +1628,7 @@
 		}
 		else
 		{
-			syslog(LOG_WARNING, "%s: Failed to convert hostname '%s' to IP address : %s",
+			syslog(LOG_DEBUG, "%s: Failed to convert hostname '%s' to IP address : %s",
 			       "PinholeVerification", int_ip, gai_strerror(r));
 			SoapError(h, 402, "Invalid Args");
 			return -1;
@@ -2379,9 +2379,9 @@
 				return;
 			}
 		}
-		syslog(LOG_NOTICE, "SoapMethod: Unknown: %.*s %s", methodlen, p, namespace);
+		syslog(LOG_DEBUG, "SoapMethod: Unknown: %.*s %s", methodlen, p, namespace);
 	} else {
-		syslog(LOG_NOTICE, "cannot parse SoapAction");
+		syslog(LOG_DEBUG, "cannot parse SoapAction");
 	}
 
 	SoapError(h, 401, "Invalid Action");
@@ -2429,7 +2429,7 @@
 	char body[2048];
 	int bodylen;
 
-	syslog(LOG_INFO, "Returning UPnPError %d: %s", errCode, errDesc);
+	syslog(LOG_DEBUG, "Returning UPnPError %d: %s", errCode, errDesc);
 	bodylen = snprintf(body, sizeof(body), resp, errCode, errDesc);
 	BuildResp2_upnphttp(h, 500, "Internal Server Error", body, bodylen);
 	SendRespAndClose_upnphttp(h);
